from config import TOKEN

from aiogram import Dispatcher, executor, types, Bot
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext

import genshin_buttons

import guides

bot = Bot(TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())


@dp.message_handler(commands=['start'], state='*')
async def start_handler(message: types.Message, state: FSMContext):
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Å –≥–∞–π–¥–∞–º–∏ –ø–æ –∏–≥—Ä–µ Genshin Impact! –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π',
                         reply_markup=genshin_buttons.options)
    await state.set_state('choose_option')


@dp.message_handler(state='choose_option')
async def choose_option(message: types.Message, state: FSMContext, is_back: bool = False):
    if message.text == '–ì–∞–π–¥—ã –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π' or is_back is True:
        await state.set_state('guides')
        await message.answer('–í—ã–±–µ—Ä–∏ –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥',
                             reply_markup=genshin_buttons.character)
    elif message.text == '–ì–∞–π–¥ –Ω–∞ —Ñ–∞—Ä–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤':
        name = '–ì–∞–π–¥ –Ω–∞ —Ñ–∞—Ä–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤'
        await state.update_data({"name": name})
        await state.set_state('get_back')
        await message.answer(guides.farm_guide, reply_markup=genshin_buttons.in_start)


@dp.message_handler(state='guides')
async def send_guide(message: types.Message, state: FSMContext):
    name = message.text
    await message.answer(guides.text_guides_dict[name])
    await message.answer_photo(guides.character_resources[name],
                               reply_markup=genshin_buttons.back)
    await state.update_data({"name": name})
    await state.set_state('get_back')


@dp.message_handler(state='get_back')
async def backward(message: types.Message, state: FSMContext):
    if message.text == '–•–æ—á—É –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –≥–∞–π–¥üí¨':
        name = (await state.get_data())['name']
        await message.answer(guides.video_guides[name])
    elif message.text == '–í –Ω–∞—á–∞–ª–æ‚Ü©':
        await state.set_state('*')
        await start_handler(message, state)
    elif message.text == '–í—ã–±—Ä–∞—Ç—å –≥–∞–π–¥ –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞üÜï':
        await state.set_state('choose_option')
        await choose_option(message, state, True)
    elif message.text == '–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–Ω–≥–∞üëÖ':
        await message.answer(guides.slang)


executor.start_polling(dp, skip_updates=True)
